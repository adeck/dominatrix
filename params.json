{"name":"Trix","tagline":"A UNIX-like operating system with bootloader","body":"trix\r\n==========\r\n\r\nA UNIX-like operating system with bootloader\r\n\r\nBut right now...\r\n----------------\r\n\r\n...It's just a simple bootloader.\r\nCurrently, my focus for this project is on:\r\n- making a simple interactive REPL for the bootloader,\r\n- storing config information on the first few sectors of the drive,\r\n- scanning the drive for potentially viable operating systems and branching to them,\r\n- configuring hardware, and (of course)\r\n- entering a more conventional operating mode (in preparation for more traditional operating system operation).\r\n\r\nThe bootloader itself is all assembly thus far, but once I've reverse-engineered the BIOS interrupt routines (which I'll do by copying the BIOS from 0xFFFF0000 --> 0xFFFFFFFF onto some free drive sectors and then disassembling) I'll be able to easily transition to C or C++. OTOH, I'll only see transitioning to an HLL as necessary IFF the bootloader starts to bloat to >2 KB, and since I like assembly well enough, it'll probably be at least a month before I care enough to make that happen.\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}